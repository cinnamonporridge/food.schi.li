- food_policy = FoodPolicy.new(@food, user: @current_user)
.flex.flex-col.gap-y-8
  .food-header.flex.items-center
    .w-full{ 'data-controller': 'toggleable' }
      .flex
        .grow.flex.flex-col.gap-x-1
          %h1.text-sm.uppercase
            = @food.name
          .badges.flex.gap-x-3.mt-1
            - if @food.global?
              .flex.items-end.gap-x-1.text-2xs.text-gray-400
                = render GlobalFoodBadgeIconComponent.new(@food.global?)
                = t('shared.global')
            - if @food.vegan?
              .flex.items-end.gap-x-1.text-2xs.text-gray-400
                = render VeganBadgeIconComponent.new(@food.vegan?)
                = t('shared.vegan')
            - if @food.data_source_url.present?
              .flex.items-end.gap-x-1.text-2xs.text-gray-400
                .text-gray-500
                  = render HeroiconComponent.new(:link)
                = link_to @food.decorate.data_source_url_authority, @food.data_source_url, class: 'hover:text-green-700 transition'
        - if food_policy.write?
          .shrink-0
            %button.text-gray-500.hover:text-gray-900{ 'data-action': 'toggleable#toggle', 'aria-expanded': 'true', 'aria-haspopup': 'true' }
              = render HeroiconComponent.new(:'dots-vertical')

      - if food_policy.write?
        .food-actions.grid.grid-cols-1.gap-2.pt-6.pb-4{ 'data-toggleable-target': 'toggleable', role: "menu" , 'aria-orientation': "vertical", 'tabindex': "-1" }
          = render LinkToActionComponent.new(t('.edit_food'), edit_food_path(@food), icon: :pencil)

          - if @food.deleteable?
            = render DeleteButtonComponent.new(t('.delete_food'), food_path(@food))

          = render Food::MakeGlobalFormComponent.new(food: @food, user: @current_user)

  = render 'facts', food: @food

  = render 'portions/index', portions: @food.portions.ordered_by_primary_then_name
