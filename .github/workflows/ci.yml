env:
  RUBY_VERSION: 2.7
  NODE_VERSION: 12
  RAILS_ENV: test
  POSTGRES_PASSWORD: "postgres"

name: Continuous Integration
on: [push, pull_request]

jobs:
  bundle_install:
    name: Setup Ruby and bundle install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Cache Ruby gems
        uses: actions/cache@v2
        id: bundler-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}

      - name: Bundle install
        if: steps.bundler-cache.outputs.cache-hit != 'true'
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

  yarn_install:
    name: Setup node and yarn install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm install -g yarn

      - name: Cache yarn.lock
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install


  rubocop:
    name: Rubocop
    needs: bundle_install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Restore cache for Ruby gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}

      - name: Use gems from vendor/bundle
        run: bundle config path vendor/bundle

      - name: Run Rubocop
        run: bundle exec rubocop -p

  test:
    name: Rails tests
    needs: [bundle_install, yarn_install]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      # has to run before Ruby gems, for some reason the hashsum of yarn.lock changes
      - name: Restore cache for npm packages
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Restore cache for Ruby gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}

      - name: Use gems from vendor/bundle
        run: bundle config path vendor/bundle

      - name: Create master.key
        env:
          RAILS_MASTER_KEY_FOR_TEST: ${{ secrets.RAILS_MASTER_KEY_FOR_TEST }}
        run: echo "${RAILS_MASTER_KEY_FOR_TEST}" > ./config/master.key

      - name: Setup database
        run: |
          cp ./.github/workflows/templates/database.yml.github-actions config/database.yml
          bin/rails db:test:prepare

      - name: bin/rails test
        run: bin/rails test

      - name: bin/rails test:system
        run: bin/rails test:system

